{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AzureDataFactory23122020"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Actitity Log Demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insert Pipeline Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_exec_pipelineactivity]",
							"storedProcedureParameters": {
								"DataFactory": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pipeline": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-25T06:00:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopySink')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MoveSourceToStaging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "If Exist Truncate Staging Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n\tCONCAT(c.FirstName, ' ', c.LastName) as CustomerName\n\t, c.SalesPerson\n       , l.OrderDate\n       , o.LineTotal\n       , o.OrderQty\n       , o.UnitPrice\n FROM SalesLT.SalesOrderDetail o\n JOIN SalesLT.SalesOrderHeader l\n   ON o.SalesOrderID = l.SalesOrderID\n JOIN SalesLT.Customer c\n   ON l.CustomerID = c.CustomerID\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CustomerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SalesPerson",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LineTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "LineTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "OrderQty",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SourceSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "If Exist Truncate Staging Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[staging].[usp_ifTableExists]",
							"storedProcedureParameters": {
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "TableName",
							"value": "CustomerReport"
						}
					},
					{
						"name": "DataFlowTest001",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "MoveSourceToStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlowTest001",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DataFlowSource": {},
									"SalesReportByYearCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"variables": {
					"TableName": {
						"type": "String",
						"defaultValue": "CustomerReport"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-12-26T05:47:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceSQL')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/dataflows/DataFlowTest001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IfExistsDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RegionInsertAndExceptions",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlowTest002",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MasterRegionMapping": {},
									"MainSource": {},
									"SinkinRegionExceptions": {
										"TableName": "EmployeeData"
									},
									"SinkEmployeetoSQL": {
										"TableName": "EmployeeData"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-12-26T12:07:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlowTest002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WaitDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivityLog')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "lpep_pickup_datetime",
						"type": "String"
					},
					{
						"name": "Lpep_dropoff_datetime",
						"type": "String"
					},
					{
						"name": "Store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "RateCodeID",
						"type": "String"
					},
					{
						"name": "Pickup_longitude",
						"type": "String"
					},
					{
						"name": "Pickup_latitude",
						"type": "String"
					},
					{
						"name": "Dropoff_longitude",
						"type": "String"
					},
					{
						"name": "Dropoff_latitude",
						"type": "String"
					},
					{
						"name": "Passenger_count",
						"type": "String"
					},
					{
						"name": "Trip_distance",
						"type": "String"
					},
					{
						"name": "Fare_amount",
						"type": "String"
					},
					{
						"name": "Extra",
						"type": "String"
					},
					{
						"name": "MTA_tax",
						"type": "String"
					},
					{
						"name": "Tip_amount",
						"type": "String"
					},
					{
						"name": "Tolls_amount",
						"type": "String"
					},
					{
						"name": "Ehail_fee",
						"type": "String"
					},
					{
						"name": "improvement_surcharge",
						"type": "String"
					},
					{
						"name": "Total_amount",
						"type": "String"
					},
					{
						"name": "Payment_type",
						"type": "String"
					},
					{
						"name": "Trip_type ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestionationTableSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "EmployeeData"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "staging",
					"table": "EmployeeData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestionationTableSQL_Exceptions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "EmployeeData"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "staging",
					"table": "EmployeeData_Region_Exceptions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HR_Data.csv",
						"folderPath": "input",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp ID",
						"type": "String"
					},
					{
						"name": "Name Prefix",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Middle Initial",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "E Mail",
						"type": "String"
					},
					{
						"name": "Father's Name",
						"type": "String"
					},
					{
						"name": "Mother's Name",
						"type": "String"
					},
					{
						"name": "Mother's Maiden Name",
						"type": "String"
					},
					{
						"name": "Date of Birth",
						"type": "String"
					},
					{
						"name": "Time of Birth",
						"type": "String"
					},
					{
						"name": "Age in Yrs.",
						"type": "String"
					},
					{
						"name": "Weight in Kgs.",
						"type": "String"
					},
					{
						"name": "Date of Joining",
						"type": "String"
					},
					{
						"name": "Quarter of Joining",
						"type": "String"
					},
					{
						"name": "Half of Joining",
						"type": "String"
					},
					{
						"name": "Year of Joining",
						"type": "String"
					},
					{
						"name": "Month of Joining",
						"type": "String"
					},
					{
						"name": "Month Name of Joining",
						"type": "String"
					},
					{
						"name": "Short Month",
						"type": "String"
					},
					{
						"name": "Day of Joining",
						"type": "String"
					},
					{
						"name": "DOW of Joining",
						"type": "String"
					},
					{
						"name": "Short DOW",
						"type": "String"
					},
					{
						"name": "Age in Company (Years)",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Last % Hike",
						"type": "String"
					},
					{
						"name": "SSN",
						"type": "String"
					},
					{
						"name": "Phone No. ",
						"type": "String"
					},
					{
						"name": "Place Name",
						"type": "String"
					},
					{
						"name": "County",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Zip",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterRegionMapping')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "mst_region_mapping.csv",
						"folderPath": "input",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "staging",
					"table": "CustomerReport"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowTest001')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SourceSQL",
								"type": "DatasetReference"
							},
							"name": "DataFlowSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "SalesReportByYearCSV"
						}
					],
					"transformations": [
						{
							"name": "SalesPersonData"
						},
						{
							"name": "DerivedYearOrderDate"
						},
						{
							"name": "LineSalesTotal"
						},
						{
							"name": "PivotSalesPersonPerYear"
						},
						{
							"name": "SortSalesPersonByName"
						}
					],
					"script": "source(output(\n\t\tID as integer,\n\t\tCustomerName as string,\n\t\tSalesPerson as string,\n\t\tOrderDate as date,\n\t\tLineTotal as decimal(18,3),\n\t\tQuantity as integer,\n\t\tUnitPrice as decimal(18,3),\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DataFlowSource\nDataFlowSource select(mapColumn(\n\t\tSalesPerson,\n\t\tOrderDate,\n\t\tQuantity,\n\t\tUnitPrice\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SalesPersonData\nSalesPersonData derive(Year = year(OrderDate)) ~> DerivedYearOrderDate\nDerivedYearOrderDate aggregate(groupBy(SalesPerson,\n\t\tYear),\n\tLineSales = sum(multiply(UnitPrice,Quantity))) ~> LineSalesTotal\nLineSalesTotal pivot(groupBy(SalesPerson),\n\tpivotBy(Year),\n\t{} = sum(LineSales),\n\tcolumnNaming: '$N$VTotal Sales',\n\tlateral: true) ~> PivotSalesPersonPerYear\nPivotSalesPersonPerYear sort(asc(SalesPerson, true)) ~> SortSalesPersonByName\nSortSalesPersonByName sink(input(\n\t\tVendorID as string,\n\t\tlpep_pickup_datetime as string,\n\t\tLpep_dropoff_datetime as string,\n\t\tStore_and_fwd_flag as string,\n\t\tRateCodeID as string,\n\t\tPickup_longitude as string,\n\t\tPickup_latitude as string,\n\t\tDropoff_longitude as string,\n\t\tDropoff_latitude as string,\n\t\tPassenger_count as string,\n\t\tTrip_distance as string,\n\t\tFare_amount as string,\n\t\tExtra as string,\n\t\tMTA_tax as string,\n\t\tTip_amount as string,\n\t\tTolls_amount as string,\n\t\tEhail_fee as string,\n\t\timprovement_surcharge as string,\n\t\tTotal_amount as string,\n\t\tPayment_type as string,\n\t\t{Trip_type } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2008_SalesReport'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SalesReportByYearCSV"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceSQL')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowTest002')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MasterRegionMapping",
								"type": "DatasetReference"
							},
							"name": "MasterRegionMapping"
						},
						{
							"dataset": {
								"referenceName": "EmployeeData",
								"type": "DatasetReference"
							},
							"name": "MainSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestionationTableSQL_Exceptions",
								"type": "DatasetReference"
							},
							"name": "SinkinRegionExceptions"
						},
						{
							"dataset": {
								"referenceName": "DestionationTableSQL",
								"type": "DatasetReference"
							},
							"name": "SinkEmployeetoSQL"
						}
					],
					"transformations": [
						{
							"name": "ExistsinRegionMapping"
						},
						{
							"name": "NotExistsinRegionMapping"
						}
					],
					"script": "source(output(\n\t\tRegion as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MasterRegionMapping\nsource(output(\n\t\t{Emp ID} as string,\n\t\t{Name Prefix} as string,\n\t\t{First Name} as string,\n\t\t{Middle Initial} as string,\n\t\t{Last Name} as string,\n\t\tGender as string,\n\t\t{E Mail} as string,\n\t\t{Father's Name} as string,\n\t\t{Mother's Name} as string,\n\t\t{Mother's Maiden Name} as string,\n\t\t{Date of Birth} as string,\n\t\t{Time of Birth} as string,\n\t\t{Age in Yrs.} as string,\n\t\t{Weight in Kgs.} as string,\n\t\t{Date of Joining} as string,\n\t\t{Quarter of Joining} as string,\n\t\t{Half of Joining} as string,\n\t\t{Year of Joining} as string,\n\t\t{Month of Joining} as string,\n\t\t{Month Name of Joining} as string,\n\t\t{Short Month} as string,\n\t\t{Day of Joining} as string,\n\t\t{DOW of Joining} as string,\n\t\t{Short DOW} as string,\n\t\t{Age in Company (Years)} as string,\n\t\tSalary as string,\n\t\t{Last % Hike} as string,\n\t\tSSN as string,\n\t\t{Phone No. } as string,\n\t\t{Place Name} as string,\n\t\tCounty as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZip as string,\n\t\tRegion as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MainSource\nMainSource, MasterRegionMapping exists(MainSource@Region == MasterRegionMapping@Region,\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistsinRegionMapping\nMainSource, MasterRegionMapping exists(MainSource@Region == MasterRegionMapping@Region,\n\tnegate:true,\n\tbroadcast: 'auto')~> NotExistsinRegionMapping\nNotExistsinRegionMapping sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkinRegionExceptions\nExistsinRegionMapping sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkEmployeetoSQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MasterRegionMapping')]",
				"[concat(variables('factoryId'), '/datasets/EmployeeData')]",
				"[concat(variables('factoryId'), '/datasets/DestionationTableSQL_Exceptions')]",
				"[concat(variables('factoryId'), '/datasets/DestionationTableSQL')]"
			]
		}
	]
}