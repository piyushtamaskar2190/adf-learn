{
	"name": "DataFlowTest002",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MasterRegionMapping",
						"type": "DatasetReference"
					},
					"name": "MasterRegionMapping"
				},
				{
					"dataset": {
						"referenceName": "EmployeeData",
						"type": "DatasetReference"
					},
					"name": "MainSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DestionationTableSQL_Exceptions",
						"type": "DatasetReference"
					},
					"name": "SinkinRegionExceptions"
				},
				{
					"dataset": {
						"referenceName": "DestionationTableSQL",
						"type": "DatasetReference"
					},
					"name": "SinkEmployeetoSQL"
				}
			],
			"transformations": [
				{
					"name": "ExistsinRegionMapping"
				},
				{
					"name": "NotExistsinRegionMapping"
				}
			],
			"script": "source(output(\n\t\tRegion as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MasterRegionMapping\nsource(output(\n\t\t{Emp ID} as string,\n\t\t{Name Prefix} as string,\n\t\t{First Name} as string,\n\t\t{Middle Initial} as string,\n\t\t{Last Name} as string,\n\t\tGender as string,\n\t\t{E Mail} as string,\n\t\t{Father's Name} as string,\n\t\t{Mother's Name} as string,\n\t\t{Mother's Maiden Name} as string,\n\t\t{Date of Birth} as string,\n\t\t{Time of Birth} as string,\n\t\t{Age in Yrs.} as string,\n\t\t{Weight in Kgs.} as string,\n\t\t{Date of Joining} as string,\n\t\t{Quarter of Joining} as string,\n\t\t{Half of Joining} as string,\n\t\t{Year of Joining} as string,\n\t\t{Month of Joining} as string,\n\t\t{Month Name of Joining} as string,\n\t\t{Short Month} as string,\n\t\t{Day of Joining} as string,\n\t\t{DOW of Joining} as string,\n\t\t{Short DOW} as string,\n\t\t{Age in Company (Years)} as string,\n\t\tSalary as string,\n\t\t{Last % Hike} as string,\n\t\tSSN as string,\n\t\t{Phone No. } as string,\n\t\t{Place Name} as string,\n\t\tCounty as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZip as string,\n\t\tRegion as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MainSource\nMainSource, MasterRegionMapping exists(MainSource@Region == MasterRegionMapping@Region,\n\tnegate:false,\n\tbroadcast: 'auto')~> ExistsinRegionMapping\nMainSource, MasterRegionMapping exists(MainSource@Region == MasterRegionMapping@Region,\n\tnegate:true,\n\tbroadcast: 'auto')~> NotExistsinRegionMapping\nNotExistsinRegionMapping sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkinRegionExceptions\nExistsinRegionMapping sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkEmployeetoSQL"
		}
	}
}